{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Login\\\\Login.js\";\n\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar Login = function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert(\"User does not exist anymore.\");\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        props.setUser(user);\n        props.setIsLogin(true);\n        navigation.navigate('Overview');\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.text,\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.text,\n    placeholder: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Login\",\n    color: \"#333333\",\n    onPress: onLoginPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    borderBottomColor: 'black',\n    borderBottomWidth: 2,\n    borderStyle: 'solid',\n    width: 200,\n    marginVertical: 5,\n    color: '#333333',\n    fontSize: 15,\n    marginVertical: 10\n  }\n});\nexport default Login;","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Login/Login.js"],"names":["React","useState","StatusBar","firebase","useNavigation","Login","props","email","setEmail","password","setPassword","navigation","onLoginPress","auth","signInWithEmailAndPassword","then","response","uid","user","usersRef","firestore","collection","doc","get","firestoreDocument","exists","alert","data","setUser","setIsLogin","navigate","catch","error","styles","container","text","StyleSheet","create","flex","alignItems","justifyContent","borderBottomColor","borderBottomWidth","borderStyle","width","marginVertical","color","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { firebase } from '../firebase/config';\r\nimport { StyleSheet, TextInput, Button, View, Text } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nlet Login = (props) => {\r\n\r\n  let [email, setEmail] = useState('');\r\n  let [password, setPassword] = useState('');\r\n\r\n  const navigation = useNavigation();\r\n\r\n  let onLoginPress = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const usersRef = firebase.firestore().collection('users')\r\n        usersRef\r\n          .doc(uid)\r\n          .get()\r\n          .then(firestoreDocument => {\r\n            if (!firestoreDocument.exists) {\r\n              alert(\"User does not exist anymore.\")\r\n              return;\r\n            }\r\n            const user = firestoreDocument.data();\r\n            props.setUser(user);\r\n            props.setIsLogin(true);\r\n            navigation.navigate('Overview');\r\n          })\r\n          .catch(error => {\r\n            alert(error);\r\n          });\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput style={styles.text} placeholder=\"Email\" value={email} onChangeText = {setEmail} />\r\n      <TextInput secureTextEntry={true} style={styles.text} \r\n                            placeholder=\"Password\" value={password} onChangeText = {setPassword} />\r\n      <Button title=\"Login\" color=\"#333333\" onPress={onLoginPress} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  text: {\r\n    borderBottomColor: 'black',\r\n    borderBottomWidth: 2,\r\n    borderStyle: 'solid',\r\n    width: 200,\r\n    marginVertical: 5,\r\n    color: '#333333',\r\n    fontSize: 15,\r\n    marginVertical: 10,\r\n  },\r\n});\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}