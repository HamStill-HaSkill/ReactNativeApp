{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Settings\\\\Settings.js\";\n\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport { setCustomText } from 'react-native-global-props';\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\nimport i18n from \"../i18n\";\nvar Stack = createStackNavigator();\n\nvar Settings = function Settings(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFont = _useState4[0],\n      setIsFont = _useState4[1];\n\n  var _useState5 = useState(17),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fontSize = _useState6[0],\n      setFontSize = _useState6[1];\n\n  var _useState7 = useState(props.lng),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lng = _useState8[0],\n      setLng = _useState8[1];\n\n  var toggleSwitch = function toggleSwitch(value) {\n    props.setIsDark(value);\n    setIsEnabled(value);\n  };\n\n  var _useFonts = useFonts({\n    Inter_900Black: Inter_900Black,\n    Inter_300Light: Inter_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var customTextProps = {\n    style: {\n      fontFamily: 'Inter_900Black',\n      fontSize: fontSize\n    }\n  };\n  var defaultTextProps = {\n    style: {\n      fontFamily: 'Inter_300Light',\n      fontSize: fontSize\n    }\n  };\n\n  var setCustomFont = function setCustomFont(value) {\n    setCustomText(value ? customTextProps : defaultTextProps);\n    props.setFont(value ? customTextProps : defaultTextProps);\n    setIsFont(value);\n  };\n\n  var changeLngToRus = function changeLngToRus() {\n    i18n.locale = \"ru\";\n    props.setLng('ru');\n    setLng('ru');\n  };\n\n  var changeSize = function changeSize(value) {\n    setFontSize(value);\n  };\n\n  var changeLngToEng = function changeLngToEng() {\n    i18n.locale = \"en\";\n    props.setLng('en');\n    setLng('en');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: changeLngToRus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.imageThumbnail,\n    source: {\n      uri: \"https://megabuzz.ru/image/flags/flag-rus.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: changeLngToEng,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.imageThumbnail,\n    source: {\n      uri: \"https://anastasiafond.ru/wp-content/uploads/2018/04/En.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, i18n.t(\"def\")), React.createElement(Switch, {\n    trackColor: {\n      false: \"gray\",\n      true: \"lime\"\n    },\n    thumbColor: isEnabled ? \"white\" : \"white\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, i18n.t(\"dark\"))), React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, i18n.t(\"def_font\")), React.createElement(Switch, {\n    trackColor: {\n      false: \"gray\",\n      true: \"lime\"\n    },\n    thumbColor: isFont ? \"white\" : \"white\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: setCustomFont,\n    value: isFont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, i18n.t(\"inter\"))), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: 200,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, i18n.t(\"size\"), \" \", Math.floor(fontSize)), React.createElement(Slider, {\n    maximumValue: 20,\n    value: fontSize,\n    onValueChange: changeSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: i18n.t(\"save\"),\n    onPress: function onPress() {\n      return setCustomFont(isFont);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Settings;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around'\n  },\n  imageThumbnail: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    width: 100,\n    borderRadius: 90\n  },\n  itemContainer: {\n    flexDirection: 'row'\n  },\n  textName: {\n    textAlign: 'center',\n    fontSize: 17\n  },\n  textDesctiption: {\n    textAlign: 'center',\n    color: 'gray'\n  },\n  textLocation: {\n    color: 'gray',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Settings/Settings.js"],"names":["React","useState","createStackNavigator","useNavigation","Slider","setCustomText","useFonts","Inter_900Black","Inter_300Light","i18n","Stack","Settings","props","isEnabled","setIsEnabled","isFont","setIsFont","fontSize","setFontSize","lng","setLng","toggleSwitch","value","setIsDark","fontsLoaded","customTextProps","style","fontFamily","defaultTextProps","setCustomFont","setFont","changeLngToRus","locale","changeSize","changeLngToEng","styles","container","itemContainer","imageThumbnail","uri","t","false","true","width","textAlign","Math","floor","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","height","borderRadius","flexDirection","textName","textDesctiption","color","textLocation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Button, Text, View, StyleSheet, Switch, TouchableWithoutFeedback, Image, Slider } from 'react-native';\r\nimport { setCustomText } from 'react-native-global-props';\r\nimport { useFonts, Inter_900Black, Inter_300Light } from '@expo-google-fonts/inter';\r\nimport i18n from '../i18n'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Settings = (props) => {\r\n\r\n    const [isEnabled, setIsEnabled] = useState(false);\r\n    const [isFont, setIsFont] = useState(false);\r\n    const [fontSize, setFontSize] = useState(17);\r\n    let [lng, setLng] = useState(props.lng);\r\n\r\n    const toggleSwitch = (value) => {\r\n        props.setIsDark(value);\r\n        setIsEnabled(value);\r\n    };\r\n    let [fontsLoaded] = useFonts({\r\n        Inter_900Black,\r\n        Inter_300Light,\r\n\r\n    });\r\n\r\n    const customTextProps = {\r\n        style: {\r\n            fontFamily: 'Inter_900Black',\r\n            fontSize: fontSize,\r\n        }\r\n    }\r\n\r\n    const defaultTextProps = {\r\n        style: {\r\n            fontFamily: 'Inter_300Light',\r\n            fontSize: fontSize,\r\n        }\r\n    }\r\n    let setCustomFont = (value) => {\r\n        setCustomText(value ? customTextProps : defaultTextProps);\r\n        props.setFont(value ? customTextProps : defaultTextProps);\r\n        setIsFont(value);\r\n\r\n    }\r\n    let changeLngToRus = () => {\r\n        i18n.locale = \"ru\";\r\n        props.setLng('ru');\r\n        setLng('ru');\r\n    }\r\n\r\n    let changeSize = (value) => {\r\n        setFontSize(value);\r\n    }\r\n    let changeLngToEng = () => {\r\n        i18n.locale = \"en\";\r\n        props.setLng('en');\r\n        setLng('en');\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.itemContainer}>\r\n                <TouchableWithoutFeedback onPress={changeLngToRus}>\r\n                    <Image style={styles.imageThumbnail} source={{ uri: \"https://megabuzz.ru/image/flags/flag-rus.png\" }} />\r\n                </TouchableWithoutFeedback>\r\n                <TouchableWithoutFeedback onPress={changeLngToEng}>\r\n                    <Image style={styles.imageThumbnail} source={{ uri: \"https://anastasiafond.ru/wp-content/uploads/2018/04/En.png\" }} />\r\n                </TouchableWithoutFeedback>\r\n            </View>\r\n            <View style={styles.itemContainer}>\r\n                <Text>{i18n.t(\"def\")}</Text>\r\n                <Switch\r\n                    trackColor={{ false: \"gray\", true: \"lime\" }}\r\n                    thumbColor={isEnabled ? \"white\" : \"white\"}\r\n                    ios_backgroundColor=\"#3e3e3e\"\r\n                    onValueChange={toggleSwitch}\r\n                    value={isEnabled}\r\n                />\r\n                <Text>{i18n.t(\"dark\")}</Text>\r\n            </View>\r\n            <View style={styles.itemContainer}>\r\n                <Text>{i18n.t(\"def_font\")}</Text>\r\n                <Switch\r\n                    trackColor={{ false: \"gray\", true: \"lime\" }}\r\n                    thumbColor={isFont ? \"white\" : \"white\"}\r\n                    ios_backgroundColor=\"#3e3e3e\"\r\n                    onValueChange={setCustomFont}\r\n                    value={isFont}\r\n                />\r\n                <Text>{i18n.t(\"inter\")}</Text>\r\n            </View>\r\n            <View>\r\n                <Text style={{ width: 200, textAlign: 'center'}}>\r\n                {i18n.t(\"size\")} {Math.floor(fontSize)}\r\n                </Text>\r\n                <Slider maximumValue={20}\r\n                    value={fontSize}\r\n                    onValueChange={changeSize} />\r\n                <Button title={i18n.t(\"save\")} onPress={() => setCustomFont(isFont)}></Button>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        justifyContent: 'space-around'\r\n    },\r\n    imageThumbnail: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 90,\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    textName: {\r\n        textAlign: 'center',\r\n        fontSize: 17,\r\n    },\r\n    textDesctiption: {\r\n        textAlign: 'center',\r\n        color: 'gray',\r\n    },\r\n    textLocation: {\r\n        color: 'gray',\r\n        textAlign: 'center',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}