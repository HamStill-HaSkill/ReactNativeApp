{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Detail\\\\Edit.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport i18n from \"../i18n\";\n\nvar Edit = function Edit(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var park = route.params.park;\n\n  var _useState = useState(park.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(park.description),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(park.location),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var entityRef = firebase.firestore().collection('parks');\n\n  var saveData = function saveData() {\n    console.log(name);\n    entityRef.doc(park.id).update({\n      name: name,\n      description: description,\n      location: location\n    });\n    navigation.popToTop();\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imageThumbnail,\n    source: {\n      uri: park.src\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    value: name,\n    onChangeText: setName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    value: description,\n    onChangeText: setDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text,\n    value: location,\n    onChangeText: setLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), React.createElement(Button, {\n    onPress: saveData,\n    title: i18n.t('save'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Edit;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around'\n  },\n  containerText: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    borderBottomColor: 'black',\n    borderBottomWidth: 2,\n    borderStyle: 'solid',\n    width: 300,\n    marginVertical: 5,\n    color: '#333333',\n    fontSize: 15,\n    marginVertical: 10\n  },\n  imageThumbnail: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 120,\n    height: 120,\n    borderRadius: 90\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Detail/Edit.js"],"names":["React","useState","useEffect","useRef","firebase","i18n","Edit","navigation","route","park","params","name","setName","description","setDescription","location","setLocation","entityRef","firestore","collection","saveData","console","log","doc","id","update","popToTop","styles","container","containerText","imageThumbnail","uri","src","text","t","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderBottomWidth","borderStyle","width","marginVertical","color","fontSize","height","borderRadius"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,QAAT;;;;;;;;;;;AAEA,OAAOC,IAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAEpC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;;AAFoC,kBAGdR,QAAQ,CAACQ,IAAI,CAACE,IAAN,CAHM;AAAA;AAAA,MAG/BA,IAH+B;AAAA,MAGzBC,OAHyB;;AAAA,mBAIAX,QAAQ,CAACQ,IAAI,CAACI,WAAN,CAJR;AAAA;AAAA,MAI/BA,WAJ+B;AAAA,MAIlBC,cAJkB;;AAAA,mBAKNb,QAAQ,CAACQ,IAAI,CAACM,QAAN,CALF;AAAA;AAAA,MAK/BA,QAL+B;AAAA,MAKrBC,WALqB;;AAMpC,MAAMC,SAAS,GAAGb,QAAQ,CAACc,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAlB;;AAEA,MAAIC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACAM,IAAAA,SAAS,CAACM,GAAV,CAAcd,IAAI,CAACe,EAAnB,EAAuBC,MAAvB,CAA8B;AAACd,MAAAA,IAAI,EAAJA,IAAD;AAAOE,MAAAA,WAAW,EAAXA,WAAP;AAAoBE,MAAAA,QAAQ,EAARA;AAApB,KAA9B;AACAR,IAAAA,UAAU,CAACmB,QAAX;AACH,GAJD;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,MAAM,CAACG,cAArB;AAAqC,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAEtB,IAAI,CAACuB;AAAZ,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEL,MAAM,CAACM,IAAzB;AAA+B,IAAA,KAAK,EAAEtB,IAAtC;AAA4C,IAAA,YAAY,EAAEC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEe,MAAM,CAACM,IAAzB;AAA+B,IAAA,KAAK,EAAEpB,WAAtC;AAAmD,IAAA,YAAY,EAAEC,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEa,MAAM,CAACM,IAAzB;AAA+B,IAAA,KAAK,EAAElB,QAAtC;AAAgD,IAAA,YAAY,EAAEC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,QAAjB;AAA2B,IAAA,KAAK,EAAEf,IAAI,CAAC6B,CAAL,CAAO,MAAP,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAYH,CA1BD;;AA2BA,eAAe5B,IAAf;AAEA,IAAMqB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,eAAe,EAAE,OAJV;AAKPF,IAAAA,cAAc,EAAE;AALT,GADkB;AAQ7BT,EAAAA,aAAa,EAAE;AACXQ,IAAAA,IAAI,EAAE,GADK;AAEXC,IAAAA,cAAc,EAAE,QAFL;AAGXC,IAAAA,UAAU,EAAE;AAHD,GARc;AAa7BN,EAAAA,IAAI,EAAE;AACFQ,IAAAA,iBAAiB,EAAE,OADjB;AAEFC,IAAAA,iBAAiB,EAAE,CAFjB;AAGFC,IAAAA,WAAW,EAAE,OAHX;AAIFC,IAAAA,KAAK,EAAE,GAJL;AAKFC,IAAAA,cAAc,EAAE,CALd;AAMFC,IAAAA,KAAK,EAAE,SANL;AAOFC,IAAAA,QAAQ,EAAE,EAPR;AAQFF,IAAAA,cAAc,EAAE;AARd,GAbuB;AAuB7Bf,EAAAA,cAAc,EAAE;AACZQ,IAAAA,cAAc,EAAE,QADJ;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZK,IAAAA,KAAK,EAAE,GAHK;AAIZI,IAAAA,MAAM,EAAE,GAJI;AAKZC,IAAAA,YAAY,EAAE;AALF;AAvBa,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { firebase } from '../firebase/config';\r\nimport { SafeAreaView, TextInput, StyleSheet, View, Text, FlatList, Image, ScrollView, TouchableWithoutFeedback, Button } from 'react-native';\r\nimport i18n from '../i18n'\r\n\r\nconst Edit = ({ navigation, route }) => {\r\n\r\n    const park = route.params.park;\r\n    let [name, setName] = useState(park.name)\r\n    let [description, setDescription] = useState(park.description)\r\n    let [location, setLocation] = useState(park.location)\r\n    const entityRef = firebase.firestore().collection('parks')\r\n\r\n    let saveData = () => {\r\n        console.log(name);\r\n        entityRef.doc(park.id).update({name, description, location});\r\n        navigation.popToTop();\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.containerText}>\r\n                <Image style={styles.imageThumbnail} source={{ uri: park.src }} />\r\n                <TextInput style={styles.text} value={name} onChangeText={setName} />\r\n                <TextInput style={styles.text} value={description} onChangeText={setDescription} />\r\n                <TextInput style={styles.text} value={location} onChangeText={setLocation} />\r\n            </View>\r\n            <Button onPress={saveData} title={i18n.t('save')} />\r\n        </View>\r\n\r\n    );\r\n};\r\nexport default Edit;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        justifyContent: 'space-around',\r\n    },\r\n    containerText: {\r\n        flex: 0.5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    text: {\r\n        borderBottomColor: 'black',\r\n        borderBottomWidth: 2,\r\n        borderStyle: 'solid',\r\n        width: 300,\r\n        marginVertical: 5,\r\n        color: '#333333',\r\n        fontSize: 15,\r\n        marginVertical: 10,\r\n    },\r\n    imageThumbnail: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 120,\r\n        height: 120,\r\n        borderRadius: 90,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}