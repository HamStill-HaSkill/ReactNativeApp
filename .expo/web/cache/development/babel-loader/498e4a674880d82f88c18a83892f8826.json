{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Settings\\\\Settings.js\";\n\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport i18n from \"../i18n\";\nvar Stack = createStackNavigator();\n\nvar Settings = function Settings(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lng = _useState4[0],\n      setLng = _useState4[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var changeLngToRus = function changeLngToRus() {\n    i18n.locale = \"ru\";\n    props.setLng('ru');\n    setLng('ru');\n  };\n\n  var changeLngToEng = function changeLngToEng() {\n    i18n.locale = \"en\";\n    props.setLng('en');\n    setLng('en');\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.itemContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: changeLngToRus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imageThumbnail,\n    source: {\n      uri: \"https://megabuzz.ru/image/flags/flag-rus.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableWithoutFeedback, {\n    onPress: changeLngToEng,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.imageThumbnail,\n    source: {\n      uri: \"https://anastasiafond.ru/wp-content/uploads/2018/04/En.png\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }))), React.createElement(Switch, {\n    trackColor: {\n      false: \"gray\",\n      true: \"lime\"\n    },\n    thumbColor: isEnabled ? \"white\" : \"white\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Settings;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    justifyContent: 'space-around'\n  },\n  imageThumbnail: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    width: 100,\n    borderRadius: 90\n  },\n  itemContainer: {\n    flexDirection: 'row'\n  },\n  textName: {\n    textAlign: 'center',\n    fontSize: 17\n  },\n  textDesctiption: {\n    textAlign: 'center',\n    color: 'gray'\n  },\n  textLocation: {\n    color: 'gray',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Settings/Settings.js"],"names":["React","useState","createStackNavigator","useNavigation","i18n","Stack","Settings","props","isEnabled","setIsEnabled","lng","setLng","toggleSwitch","previousState","changeLngToRus","locale","changeLngToEng","styles","container","itemContainer","imageThumbnail","uri","false","true","StyleSheet","create","flex","alignItems","backgroundColor","justifyContent","height","width","borderRadius","flexDirection","textName","textAlign","fontSize","textDesctiption","color","textLocation"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Button, Text, View, StyleSheet, Switch, TouchableWithoutFeedback, Image } from 'react-native';\r\nimport i18n from '../i18n'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst Settings = (props) => {\r\n\r\n    const [isEnabled, setIsEnabled] = useState(false);\r\n    let [lng, setLng] = useState('');\r\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n    \r\n\r\n    let changeLngToRus = () => {\r\n        i18n.locale = \"ru\";\r\n        props.setLng('ru');\r\n        setLng('ru');\r\n    }\r\n\r\n    let changeLngToEng = () => {\r\n        i18n.locale = \"en\";\r\n        props.setLng('en');\r\n        setLng('en');\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.itemContainer}>\r\n            <TouchableWithoutFeedback onPress={changeLngToRus}>\r\n                <Image style={styles.imageThumbnail} source={{ uri: \"https://megabuzz.ru/image/flags/flag-rus.png\" }} />\r\n            </TouchableWithoutFeedback>\r\n            <TouchableWithoutFeedback onPress={changeLngToEng}>\r\n                <Image style={styles.imageThumbnail} source={{ uri: \"https://anastasiafond.ru/wp-content/uploads/2018/04/En.png\" }} />\r\n            </TouchableWithoutFeedback>\r\n            </View>\r\n\r\n            <Switch\r\n                trackColor={{ false: \"gray\", true: \"lime\" }}\r\n                thumbColor={isEnabled ? \"white\" : \"white\"}\r\n                ios_backgroundColor=\"#3e3e3e\"\r\n                onValueChange={toggleSwitch}\r\n                value={isEnabled}\r\n            />\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        justifyContent: 'space-around'\r\n    },\r\n    imageThumbnail: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 90,\r\n    },\r\n    itemContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    textName: {\r\n        textAlign: 'center',\r\n        fontSize: 17,\r\n    },\r\n    textDesctiption: {\r\n        textAlign: 'center',\r\n        color: 'gray',\r\n    },\r\n    textLocation: {\r\n        color: 'gray',\r\n        textAlign: 'center',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}