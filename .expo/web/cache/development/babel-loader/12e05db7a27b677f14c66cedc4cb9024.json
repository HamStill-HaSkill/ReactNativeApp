{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Map\\\\Map.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\nimport Markers from \"./Markers\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\n\nvar Map = function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, props);\n\n    _this.getMarkers = function () {\n      return _this.parksData.map(function (item) {\n        return React.createElement(Marker, {\n          key: item.id,\n          coordinate: item.geo,\n          title: item.name,\n          description: item.description,\n          onPress: function onPress() {\n            return navigation.push(\"Detail\", {\n              item: item\n            });\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 45\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      parksData: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var entityRef = firebase.firestore().collection('parks');\n      var userID = props.user.id;\n      entityRef.where(\"userID\", \"==\", userID).onSnapshot(function (query) {\n        var parks = [];\n        query.forEach(function (park) {\n          var data = park.data();\n          parks.push({\n            id: park.id,\n            src: data.src,\n            name: data.name,\n            geo: data.geo,\n            description: data.description,\n            loacation: data.loacation\n          });\n        });\n\n        _this2.setState({\n          parksData: parks\n        });\n      }, function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MapView, {\n        style: {\n          flex: 1\n        },\n        provider: PROVIDER_GOOGLE,\n        showsUserLocationinitialRegion: {\n          latitude: 37.78825,\n          longitude: -122.4324,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, this.getMarkers());\n    }\n  }]);\n\n  return Map;\n}(Component);\n\n;\nexport default Map;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Map/Map.js"],"names":["React","useState","useEffect","Component","firebase","useNavigation","Markers","MapView","Marker","PROVIDER_GOOGLE","Map","props","getMarkers","parksData","map","item","id","geo","name","description","navigation","push","state","entityRef","firestore","collection","userID","user","where","onSnapshot","query","parks","forEach","park","data","src","loacation","setState","error","console","log","flex","latitude","longitude","latitudeDelta","longitudeDelta","styles","StyleSheet","create"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,QAAT;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,mBAAjD;;IAGMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAkCnBC,UAlCmB,GAkCN,YAAM;AAEf,aAAO,MAAKC,SAAL,CAAeC,GAAf,CAAmB,UAACC,IAAD;AAAA,eAAU,oBAAC,MAAD;AAC5B,UAAA,GAAG,EAAEA,IAAI,CAACC,EADkB;AAE5B,UAAA,UAAU,EAAED,IAAI,CAACE,GAFW;AAG5B,UAAA,KAAK,EAAEF,IAAI,CAACG,IAHgB;AAI5B,UAAA,WAAW,EAAEH,IAAI,CAACI,WAJU;AAIG,UAAA,OAAO,EAAE;AAAA,mBAAMC,UAAU,CAACC,IAAX,CAAgB,QAAhB,EAA0B;AAACN,cAAAA,IAAI,EAAJA;AAAD,aAA1B,CAAN;AAAA,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AAAA,OAAnB,CAAP;AAMH,KA1CkB;;AAGf,UAAKO,KAAL,GAAa;AAAET,MAAAA,SAAS,EAAE;AAAb,KAAb;AAHe;AAIhB;;;;WAMH,6BAAoB;AAAA;;AAChB,UAAMU,SAAS,GAAGnB,QAAQ,CAACoB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAlB;AACA,UAAMC,MAAM,GAAGf,KAAK,CAACgB,IAAN,CAAWX,EAA1B;AACAO,MAAAA,SAAS,CAACK,KAAV,CAAgB,QAAhB,EAA0B,IAA1B,EAAgCF,MAAhC,EAAwCG,UAAxC,CAAmD,UAAAC,KAAK,EAAI;AAClD,YAAIC,KAAK,GAAG,EAAZ;AACAD,QAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,cAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACAH,UAAAA,KAAK,CAACV,IAAN,CAAW;AACTL,YAAAA,EAAE,EAAEiB,IAAI,CAACjB,EADA;AAETmB,YAAAA,GAAG,EAAED,IAAI,CAACC,GAFD;AAGTjB,YAAAA,IAAI,EAAEgB,IAAI,CAAChB,IAHF;AAITD,YAAAA,GAAG,EAAEiB,IAAI,CAACjB,GAJD;AAKTE,YAAAA,WAAW,EAAEe,IAAI,CAACf,WALT;AAMTiB,YAAAA,SAAS,EAAEF,IAAI,CAACE;AANP,WAAX;AAQH,SAVD;;AAWA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACxB,UAAAA,SAAS,EAAEkB;AAAZ,SAAd;AACH,OAdP,EAeM,UAAAO,KAAK,EAAI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAjBP;AAmBH;;;WAYD,kBAAS;AAEL,aACA,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAE;AAAR,SAAhB;AAA6B,QAAA,QAAQ,EAAEhC,eAAvC;AACA,QAAA,8BAA8B,EAAE;AAC5BiC,UAAAA,QAAQ,EAAE,QADkB;AAE5BC,UAAAA,SAAS,EAAE,CAAC,QAFgB;AAG5BC,UAAAA,aAAa,EAAE,MAHa;AAI5BC,UAAAA,cAAc,EAAE;AAJY,SADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOK,KAAKjC,UAAL,EAPL,CADA;AAWP;;;;EA1DiBT,S;;AA2DjB;AACD,eAAeO,GAAf;AAEA,IAAMoC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { firebase } from '../firebase/config';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Markers from './Markers';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\n\r\nclass Map extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = { parksData: [] };\r\n      }\r\n    \r\n\r\n    // let [parksData, setParksData] = useState([]);\r\n\r\n  \r\n    componentDidMount() {\r\n        const entityRef = firebase.firestore().collection('parks')\r\n        const userID = props.user.id;\r\n        entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n                  let parks = [];\r\n                  query.forEach(park => {\r\n                      let data = park.data();\r\n                      parks.push({\r\n                        id: park.id, \r\n                        src: data.src,\r\n                        name: data.name,\r\n                        geo: data.geo,\r\n                        description: data.description,\r\n                        loacation: data.loacation,\r\n                      })\r\n                  });\r\n                  this.setState({parksData: parks})\r\n              },\r\n              error => {\r\n                  console.log(error)\r\n              }\r\n          )\r\n    }\r\n\r\n    getMarkers = () => {\r\n        // const navigation = useNavigation();\r\n        return this.parksData.map((item) => <Marker\r\n                key={item.id}\r\n                coordinate={item.geo}\r\n                title={item.name}\r\n                description={item.description} onPress={() => navigation.push(\"Detail\", {item})}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n        <MapView style={{ flex: 1 }} provider={PROVIDER_GOOGLE}\r\n        showsUserLocationinitialRegion={{\r\n            latitude: 37.78825,\r\n            longitude: -122.4324,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n        }}>\r\n            {this.getMarkers()}\r\n        </MapView>\r\n    );\r\n}\r\n};\r\nexport default Map;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}