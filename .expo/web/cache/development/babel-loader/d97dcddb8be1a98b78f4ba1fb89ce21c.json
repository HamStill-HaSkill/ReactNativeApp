{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Settings\\\\SettingsNavigator.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Settings from \"./Settings\";\nimport i18n from \"../i18n\";\nvar Stack = createStackNavigator();\n\nvar SettingsNavigator = function SettingsNavigator(props) {\n  var _useState = useState(props.lng),\n      _useState2 = _slicedToArray(_useState, 2),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  useEffect(function () {\n    i18n.locale = lng;\n    props.setLng(lng);\n    setLng(lng);\n  }, [lng]);\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"Settings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Settings\",\n    options: {\n      title: i18n.t('settings'),\n      headerRight: function headerRight() {\n        return React.createElement(Text, {\n          style: {\n            marginRight: 5,\n            color: 'blue'\n          },\n          onPress: props.signOut,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, i18n.t('signout'));\n      }\n    },\n    children: function children() {\n      return React.createElement(Settings, {\n        user: props.user,\n        setLng: setLng,\n        lng: lng,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 38\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SettingsNavigator;","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Settings/SettingsNavigator.js"],"names":["React","useState","useEffect","createStackNavigator","useNavigation","Settings","i18n","Stack","SettingsNavigator","props","lng","setLng","locale","title","t","headerRight","marginRight","color","signOut","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,OAAOC,QAAP;AACA,OAAOC,IAAP;AAGA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;;AAEA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA,kBAEbR,QAAQ,CAACQ,KAAK,CAACC,GAAP,CAFK;AAAA;AAAA,MAE5BA,GAF4B;AAAA,MAEvBC,MAFuB;;AAIjCT,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,IAAI,CAACM,MAAL,GAAcF,GAAd;AACAD,IAAAA,KAAK,CAACE,MAAN,CAAaD,GAAb;AACAC,IAAAA,MAAM,CAACD,GAAD,CAAN;AACH,GAJQ,EAIN,CAACA,GAAD,CAJM,CAAT;AAMA,SACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,OAAO,EAAE;AACnCG,MAAAA,KAAK,EAAEP,IAAI,CAACQ,CAAL,CAAO,UAAP,CAD4B;AAEnCC,MAAAA,WAAW,EAAE;AAAA,eACT,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAE,CAAd;AAAiBC,YAAAA,KAAK,EAAE;AAAxB,WAAb;AAA8C,UAAA,OAAO,EAAER,KAAK,CAACS,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuEZ,IAAI,CAACQ,CAAL,CAAO,SAAP,CAAvE,CADS;AAAA;AAFsB,KAAvC;AAKS,IAAA,QAAQ,EAAE;AAAA,aAAM,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEL,KAAK,CAACU,IAAtB;AAA4B,QAAA,MAAM,EAAER,MAApC;AAA4C,QAAA,GAAG,EAAED,GAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CApBD;;AAsBA,eAAeF,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Text } from 'react-native';\r\nimport Settings from './Settings';\r\nimport i18n from '../i18n'\r\n\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst SettingsNavigator = (props) => {\r\n\r\n    let [lng, setLng] = useState(props.lng);\r\n\r\n    useEffect(() => {\r\n        i18n.locale = lng;\r\n        props.setLng(lng)\r\n        setLng(lng);\r\n    }, [lng]);\r\n    \r\n    return (  \r\n        <Stack.Navigator initialRouteName=\"Settings\">\r\n            <Stack.Screen name=\"Settings\" options={{\r\n                title: i18n.t('settings'),\r\n                headerRight: () => (\r\n                    <Text style={{marginRight: 5, color: 'blue'}} onPress={props.signOut}>{i18n.t('signout')}</Text>\r\n                  ),\r\n                  }} children={() => <Settings user={props.user} setLng={setLng} lng={lng}/> } />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nexport default SettingsNavigator;\r\n"]},"metadata":{},"sourceType":"module"}