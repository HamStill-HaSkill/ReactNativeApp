{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Map\\\\Map.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\n\nvar Map = function Map(props) {\n  var navigation = useNavigation();\n\n  var getMarkers = function getMarkers() {\n    return parksData.map(function (item) {\n      React.createElement(Marker, {\n        key: item.id,\n        coordinate: item.geo,\n        title: item.name,\n        description: item.description,\n        onPress: function onPress() {\n          return navigation.push(\"Detail\", {\n            item: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      });\n    });\n  };\n\n  var _useState = useState(getMarkers()),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksData = _useState2[0],\n      setParksData = _useState2[1];\n\n  var entityRef = firebase.firestore().collection('parks');\n  var userID = props.user.id;\n  useEffect(function () {\n    entityRef.where(\"userID\", \"==\", userID).onSnapshot(function (query) {\n      var parks = [];\n      query.forEach(function (park) {\n        var data = park.data();\n        parks.push({\n          id: park.id,\n          src: data.src,\n          name: data.name,\n          description: data.description,\n          loacation: data.loacation\n        });\n      });\n      setParksData(parks);\n      console.log(parks);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocationinitialRegion: {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, function () {\n    return getMarkers();\n  });\n};\n\nexport default Map;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Map/Map.js"],"names":["React","useState","useEffect","firebase","useNavigation","MapView","Marker","PROVIDER_GOOGLE","Map","props","navigation","getMarkers","parksData","map","item","id","geo","name","description","push","setParksData","entityRef","firestore","collection","userID","user","where","onSnapshot","query","parks","forEach","park","data","src","loacation","console","log","error","flex","latitude","longitude","latitudeDelta","longitudeDelta","styles","StyleSheet","create"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,mBAAjD;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAEnB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AACA,MAAIO,UAAU,GAAG,SAAbA,UAAa,GAAM;AACnB,WAAOC,SAAS,CAACC,GAAV,CAAc,UAACC,IAAD,EAAU;AAC3B,0BAAC,MAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,QAAA,UAAU,EAAED,IAAI,CAACE,GAFrB;AAGI,QAAA,KAAK,EAAEF,IAAI,CAACG,IAHhB;AAII,QAAA,WAAW,EAAEH,IAAI,CAACI,WAJtB;AAImC,QAAA,OAAO,EAAE;AAAA,iBAAMR,UAAU,CAACS,IAAX,CAAgB,QAAhB,EAA0B;AAACL,YAAAA,IAAI,EAAJA;AAAD,WAA1B,CAAN;AAAA,SAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,KANM,CAAP;AAOH,GARD;;AAHmB,kBAYab,QAAQ,CAACU,UAAU,EAAX,CAZrB;AAAA;AAAA,MAYdC,SAZc;AAAA,MAYHQ,YAZG;;AAanB,MAAMC,SAAS,GAAGlB,QAAQ,CAACmB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAlB;AACA,MAAMC,MAAM,GAAGf,KAAK,CAACgB,IAAN,CAAWV,EAA1B;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,SAAS,CAACK,KAAV,CAAgB,QAAhB,EAA0B,IAA1B,EAAgCF,MAAhC,EAAwCG,UAAxC,CAAmD,UAAAC,KAAK,EAAI;AAClD,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,YAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACAH,QAAAA,KAAK,CAACV,IAAN,CAAW;AACTJ,UAAAA,EAAE,EAAEgB,IAAI,CAAChB,EADA;AAETkB,UAAAA,GAAG,EAAED,IAAI,CAACC,GAFD;AAGThB,UAAAA,IAAI,EAAEe,IAAI,CAACf,IAHF;AAITC,UAAAA,WAAW,EAAEc,IAAI,CAACd,WAJT;AAKTgB,UAAAA,SAAS,EAAEF,IAAI,CAACE;AALP,SAAX;AAOH,OATD;AAUAd,MAAAA,YAAY,CAACS,KAAD,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH,KAdP,EAeM,UAAAQ,KAAK,EAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KAjBP;AAmBH,GApBQ,EAoBN,EApBM,CAAT;AAuBA,SACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhB;AAA6B,IAAA,QAAQ,EAAE/B,eAAvC;AACI,IAAA,8BAA8B,EAAE;AAC5BgC,MAAAA,QAAQ,EAAE,QADkB;AAE5BC,MAAAA,SAAS,EAAE,CAAC,QAFgB;AAG5BC,MAAAA,aAAa,EAAE,MAHa;AAI5BC,MAAAA,cAAc,EAAE;AAJY,KADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK;AAAA,WAAM/B,UAAU,EAAhB;AAAA,GAPL,CADJ;AAYH,CAnDD;;AAoDA,eAAeH,GAAf;AAEA,IAAMmC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firebase } from '../firebase/config';\r\nimport { StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\n\r\nconst Map = (props) => {\r\n    \r\n    const navigation = useNavigation();\r\n    let getMarkers = () => {\r\n        return parksData.map((item) => {\r\n            <Marker\r\n                key={item.id}\r\n                coordinate={item.geo}\r\n                title={item.name}\r\n                description={item.description} onPress={() => navigation.push(\"Detail\", {item})}/>\r\n        });\r\n    }\r\n    let [parksData, setParksData] = useState(getMarkers());\r\n    const entityRef = firebase.firestore().collection('parks')\r\n    const userID = props.user.id\r\n  \r\n    useEffect(() => {\r\n        entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n                  let parks = [];\r\n                  query.forEach(park => {\r\n                      let data = park.data();\r\n                      parks.push({\r\n                        id: park.id, \r\n                        src: data.src,\r\n                        name: data.name,\r\n                        description: data.description,\r\n                        loacation: data.loacation,\r\n                      })\r\n                  });\r\n                  setParksData(parks);\r\n                  console.log(parks);\r\n              },\r\n              error => {\r\n                  console.log(error)\r\n              }\r\n          )\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <MapView style={{ flex: 1 }} provider={PROVIDER_GOOGLE}\r\n            showsUserLocationinitialRegion={{\r\n                latitude: 37.78825,\r\n                longitude: -122.4324,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421,\r\n            }}>\r\n            {() => getMarkers()}\r\n        </MapView>\r\n\r\n    );\r\n};\r\nexport default Map;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}