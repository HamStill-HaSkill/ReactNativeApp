{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Map\\\\Map.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar Map = function Map(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksData = _useState2[0],\n      setParksData = _useState2[1];\n\n  var entityRef = firebase.firestore().collection('parks');\n  var userID = props.user.id;\n  useEffect(function () {\n    entityRef.where(\"userID\", \"==\", userID).onSnapshot(function (query) {\n      var parks = [];\n      query.forEach(function (park) {\n        var data = park.data();\n        parks.push({\n          id: park.id,\n          src: data.src,\n          name: data.name,\n          description: data.description,\n          loacation: data.loacation,\n          geo: data.geo\n        });\n      });\n      setParksData(parks);\n      console.log(parks);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var getMarkers = function getMarkers() {\n    return parksData.map(function (item) {\n      React.createElement(Marker, {\n        key: item.id,\n        coordinate: item.geo,\n        title: item.name,\n        description: item.description,\n        onPress: function onPress() {\n          return navigation.push(\"Detail\", {\n            item: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      });\n    });\n  };\n\n  return React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocationinitialRegion: {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, getMarkers());\n};\n\nexport default Map;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Map/Map.js"],"names":["React","useState","useEffect","firebase","useNavigation","Map","props","parksData","setParksData","entityRef","firestore","collection","userID","user","id","where","onSnapshot","query","parks","forEach","park","data","push","src","name","description","loacation","geo","console","log","error","getMarkers","map","item","navigation","flex","PROVIDER_GOOGLE","latitude","longitude","latitudeDelta","longitudeDelta","styles","StyleSheet","create"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA,kBAEaL,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAEdM,SAFc;AAAA,MAEHC,YAFG;;AAGnB,MAAMC,SAAS,GAAGN,QAAQ,CAACO,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAlB;AACA,MAAMC,MAAM,GAAGN,KAAK,CAACO,IAAN,CAAWC,EAA1B;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,SAAS,CAACM,KAAV,CAAgB,QAAhB,EAA0B,IAA1B,EAAgCH,MAAhC,EAAwCI,UAAxC,CAAmD,UAAAC,KAAK,EAAI;AACxD,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,YAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACAH,QAAAA,KAAK,CAACI,IAAN,CAAW;AACPR,UAAAA,EAAE,EAAEM,IAAI,CAACN,EADF;AAEPS,UAAAA,GAAG,EAAEF,IAAI,CAACE,GAFH;AAGPC,UAAAA,IAAI,EAAEH,IAAI,CAACG,IAHJ;AAIPC,UAAAA,WAAW,EAAEJ,IAAI,CAACI,WAJX;AAKPC,UAAAA,SAAS,EAAEL,IAAI,CAACK,SALT;AAMPC,UAAAA,GAAG,EAAEN,IAAI,CAACM;AANH,SAAX;AAQH,OAVD;AAWAnB,MAAAA,YAAY,CAACU,KAAD,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,KAfD,EAgBI,UAAAY,KAAK,EAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KAlBL;AAoBH,GArBQ,EAqBN,EArBM,CAAT;;AAsBA,MAAIC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACnB,WAAOxB,SAAS,CAACyB,GAAV,CAAc,UAACC,IAAD,EAAU;AAC3B,0BAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,IAAI,CAACnB,EAAlB;AAAsB,QAAA,UAAU,EAAEmB,IAAI,CAACN,GAAvC;AAA4C,QAAA,KAAK,EAAEM,IAAI,CAACT,IAAxD;AACI,QAAA,WAAW,EAAES,IAAI,CAACR,WADtB;AACmC,QAAA,OAAO,EAAE;AAAA,iBAAMS,UAAU,CAACZ,IAAX,CAAgB,QAAhB,EAA0B;AAAEW,YAAAA,IAAI,EAAJA;AAAF,WAA1B,CAAN;AAAA,SAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,KAHM,CAAP;AAIH,GALD;;AAOA,SACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAhB;AAA6B,IAAA,QAAQ,EAAEC,eAAvC;AACI,IAAA,8BAA8B,EAAE;AAC5BC,MAAAA,QAAQ,EAAE,QADkB;AAE5BC,MAAAA,SAAS,EAAE,CAAC,QAFgB;AAG5BC,MAAAA,aAAa,EAAE,MAHa;AAI5BC,MAAAA,cAAc,EAAE;AAJY,KADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKT,UAAU,EAPf,CADJ;AAYH,CA/CD;;AAgDA,eAAe1B,GAAf;AAEA,IAAMoC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firebase } from '../firebase/config';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n// import MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\n\r\nconst Map = (props) => {\r\n\r\n    let [parksData, setParksData] = useState([]);\r\n    const entityRef = firebase.firestore().collection('parks')\r\n    const userID = props.user.id\r\n\r\n    useEffect(() => {\r\n        entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n            let parks = [];\r\n            query.forEach(park => {\r\n                let data = park.data();\r\n                parks.push({\r\n                    id: park.id,\r\n                    src: data.src,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    loacation: data.loacation,\r\n                    geo: data.geo,\r\n                })\r\n            });\r\n            setParksData(parks);\r\n            console.log(parks);\r\n        },\r\n            error => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    }, [])\r\n    let getMarkers = () => {\r\n        return parksData.map((item) => {\r\n            <Marker key={item.id} coordinate={item.geo} title={item.name}\r\n                description={item.description} onPress={() => navigation.push(\"Detail\", { item })} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <MapView style={{ flex: 1 }} provider={PROVIDER_GOOGLE}\r\n            showsUserLocationinitialRegion={{\r\n                latitude: 37.78825,\r\n                longitude: -122.4324,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421,\r\n            }}>\r\n            {getMarkers()}\r\n        </MapView>\r\n\r\n    );\r\n};\r\nexport default Map;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}