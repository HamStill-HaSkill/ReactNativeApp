{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Map\\\\Map.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport Markers from \"./Markers\";\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\n\nvar Map = function Map(props) {\n  var navigation = useNavigation();\n  var entityRef = firebase.firestore().collection('parks');\n  var userID = props.user.id;\n\n  var _useState = useState(function () {\n    entityRef.where(\"userID\", \"==\", userID).onSnapshot(function (query) {\n      var parks = [];\n      query.forEach(function (park) {\n        var data = park.data();\n        parks.push({\n          id: park.id,\n          src: data.src,\n          name: data.name,\n          geo: data.geo,\n          description: data.description,\n          loacation: data.loacation\n        });\n      });\n      return parks.map(function (item) {\n        React.createElement(Marker, {\n          key: item.id,\n          coordinate: item.geo,\n          title: item.name,\n          description: item.description,\n          onPress: function onPress() {\n            return navigation.push(\"Detail\", {\n              item: item\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }\n        });\n      });\n    }, function (error) {\n      console.log(error);\n      return [];\n    });\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksData = _useState2[0],\n      setParksData = _useState2[1];\n\n  return React.createElement(MapView, {\n    style: {\n      flex: 1\n    },\n    provider: PROVIDER_GOOGLE,\n    showsUserLocationinitialRegion: {\n      latitude: 37.78825,\n      longitude: -122.4324,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, parksData);\n};\n\nexport default Map;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Map/Map.js"],"names":["React","useState","useEffect","firebase","useNavigation","Markers","MapView","Marker","PROVIDER_GOOGLE","Map","props","navigation","entityRef","firestore","collection","userID","user","id","where","onSnapshot","query","parks","forEach","park","data","push","src","name","geo","description","loacation","map","item","error","console","log","parksData","setParksData","flex","latitude","longitude","latitudeDelta","longitudeDelta","styles","StyleSheet","create"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP,IAAkBC,MAAlB,EAA0BC,eAA1B,QAAiD,mBAAjD;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAEnB,MAAMC,UAAU,GAAGP,aAAa,EAAhC;AACA,MAAMQ,SAAS,GAAGT,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAlB;AACA,MAAMC,MAAM,GAAGL,KAAK,CAACM,IAAN,CAAWC,EAA1B;;AAJmB,kBAOahB,QAAQ,CAAE,YAAM;AAC5CW,IAAAA,SAAS,CAACM,KAAV,CAAgB,QAAhB,EAA0B,IAA1B,EAAgCH,MAAhC,EAAwCI,UAAxC,CAAmD,UAAAC,KAAK,EAAI;AAClD,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,KAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAClB,YAAIC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAX;AACAH,QAAAA,KAAK,CAACI,IAAN,CAAW;AACTR,UAAAA,EAAE,EAAEM,IAAI,CAACN,EADA;AAETS,UAAAA,GAAG,EAAEF,IAAI,CAACE,GAFD;AAGTC,UAAAA,IAAI,EAAEH,IAAI,CAACG,IAHF;AAITC,UAAAA,GAAG,EAAEJ,IAAI,CAACI,GAJD;AAKTC,UAAAA,WAAW,EAAEL,IAAI,CAACK,WALT;AAMTC,UAAAA,SAAS,EAAEN,IAAI,CAACM;AANP,SAAX;AAQH,OAVD;AAWA,aAAOT,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD,EAAU;AACzB,4BAAC,MAAD;AACI,UAAA,GAAG,EAAEA,IAAI,CAACf,EADd;AAEI,UAAA,UAAU,EAAEe,IAAI,CAACJ,GAFrB;AAGI,UAAA,KAAK,EAAEI,IAAI,CAACL,IAHhB;AAII,UAAA,WAAW,EAAEK,IAAI,CAACH,WAJtB;AAImC,UAAA,OAAO,EAAE;AAAA,mBAAMlB,UAAU,CAACc,IAAX,CAAgB,QAAhB,EAA0B;AAACO,cAAAA,IAAI,EAAJA;AAAD,aAA1B,CAAN;AAAA,WAJ5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,OANQ,CAAP;AAOH,KApBP,EAqBM,UAAAC,KAAK,EAAI;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,EAAP;AACH,KAxBP;AA0BH,GA3BuC,CAPrB;AAAA;AAAA,MAOdG,SAPc;AAAA,MAOHC,YAPG;;AAqEnB,SACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAhB;AAA6B,IAAA,QAAQ,EAAE9B,eAAvC;AACI,IAAA,8BAA8B,EAAE;AAC5B+B,MAAAA,QAAQ,EAAE,QADkB;AAE5BC,MAAAA,SAAS,EAAE,CAAC,QAFgB;AAG5BC,MAAAA,aAAa,EAAE,MAHa;AAI5BC,MAAAA,cAAc,EAAE;AAJY,KADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKN,SARL,CADJ;AAaH,CAlFD;;AAmFA,eAAe3B,GAAf;AAEA,IAAMkC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firebase } from '../firebase/config';\r\nimport { StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport Markers from './Markers';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\n\r\n\r\nconst Map = (props) => {\r\n    \r\n    const navigation = useNavigation();\r\n    const entityRef = firebase.firestore().collection('parks')\r\n    const userID = props.user.id;\r\n\r\n\r\n    let [parksData, setParksData] = useState( () => {\r\n        entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n                  let parks = [];\r\n                  query.forEach(park => {\r\n                      let data = park.data();\r\n                      parks.push({\r\n                        id: park.id, \r\n                        src: data.src,\r\n                        name: data.name,\r\n                        geo: data.geo,\r\n                        description: data.description,\r\n                        loacation: data.loacation,\r\n                      })\r\n                  });\r\n                  return parks.map((item) => {\r\n                    <Marker\r\n                        key={item.id}\r\n                        coordinate={item.geo}\r\n                        title={item.name}\r\n                        description={item.description} onPress={() => navigation.push(\"Detail\", {item})}/>\r\n                });\r\n              },\r\n              error => {\r\n                  console.log(error)\r\n                  return [];\r\n              }\r\n          )\r\n    });\r\n\r\n  \r\n    // useEffect(() => {\r\n    //     entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n    //               let parks = [];\r\n    //               query.forEach(park => {\r\n    //                   let data = park.data();\r\n    //                   parks.push({\r\n    //                     id: park.id, \r\n    //                     src: data.src,\r\n    //                     name: data.name,\r\n    //                     description: data.description,\r\n    //                     loacation: data.loacation,\r\n    //                   })\r\n    //               });\r\n    //               setParksData(parks);\r\n    //               console.log(parks);\r\n    //           },\r\n    //           error => {\r\n    //               console.log(error)\r\n    //           }\r\n    //       )\r\n    // })\r\n\r\n    // let getMarkers = () => {\r\n    //     return parksData.map((item) => {\r\n    //         <Marker\r\n    //             key={item.id}\r\n    //             coordinate={item.geo}\r\n    //             title={item.name}\r\n    //             description={item.description} onPress={() => navigation.push(\"Detail\", {item})}/>\r\n    //     });\r\n    // }\r\n\r\n    return (\r\n        <MapView style={{ flex: 1 }} provider={PROVIDER_GOOGLE}\r\n            showsUserLocationinitialRegion={{\r\n                latitude: 37.78825,\r\n                longitude: -122.4324,\r\n                latitudeDelta: 0.0922,\r\n                longitudeDelta: 0.0421,\r\n            }}>\r\n            {/* <Markers parksData={parksData}/> */}\r\n            {parksData}\r\n        </MapView>\r\n\r\n    );\r\n};\r\nexport default Map;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}