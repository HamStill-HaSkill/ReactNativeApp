{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { firebase } from \"./src/firebase/config\";\nimport Login from \"./src/Login/Login\";\nimport Register from \"./src/Register/Register\";\nimport NavTab from \"./src/NavTab/NavTab\";\nimport NavBar from \"./src/NavTab/NavBar\";\nimport MapNavigator from \"./src/Map/MapNavigator\";\nimport OverviewNavigator from \"./src/OverviewNavigator\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setIsLogin = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setUser(userData);\n          setLoading(false);\n          setIsLogin(true);\n        }).catch(function (error) {\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: NavTab,\n    tabBarOptions: {\n      activeTintColor: '#333333',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, !isLogin && React.createElement(Tab.Screen, {\n    name: \"Login\",\n    children: function children() {\n      return !isLoading && React.createElement(Login, {\n        setIsLogin: setIsLogin,\n        setUser: setUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 77\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }\n  }), !isLogin && React.createElement(Tab.Screen, {\n    name: \"Register\",\n    children: function children() {\n      return !isLoading && React.createElement(Register, {\n        setIsLogin: setIsLogin,\n        setUser: setUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 80\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 22\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Overview\",\n    children: function children() {\n      return React.createElement(OverviewNavigator, {\n        user: user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 65\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Map\",\n    children: function children() {\n      return React.createElement(MapNavigator, {\n        user: user,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 60\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: OverviewNavigator,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/App.js"],"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","createStackNavigator","firebase","Login","Register","NavTab","NavBar","MapNavigator","OverviewNavigator","Tab","Stack","App","isLogin","setIsLogin","isLoading","setLoading","user","setUser","usersRef","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","activeTintColor","inactiveTintColor","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { firebase } from './src/firebase/config';\nimport Login from './src/Login/Login';\nimport Register from './src/Register/Register';\nimport NavTab from './src/NavTab/NavTab';\nimport NavBar from './src/NavTab/NavBar';\nimport MapNavigator from './src/Map/MapNavigator';\nimport OverviewNavigator from './src/OverviewNavigator';\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\n  let [isLogin, setIsLogin] = useState(false);\n  let [isLoading, setLoading] = useState(true);\n  let [user, setUser] = useState();\n\n  useEffect(() => {\n    const usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser(userData)\n            setLoading(false)\n            setIsLogin(true)\n          })\n          .catch((error) => {\n            setLoading(false)\n          });\n      } else {\n        setLoading(false)\n      }\n    });\n  }, []);\n  \n  return (\n    <NavigationContainer>\n      {/* Icons for navigation tabs */}\n      <Tab.Navigator screenOptions={NavTab} tabBarOptions={{\n        activeTintColor: '#333333',\n        inactiveTintColor: 'gray',\n      }}>\n        {/* navigation tabs (bottom app)*/}\n        {!isLogin && <Tab.Screen name=\"Login\" children={() => !isLoading && <Login setIsLogin={setIsLogin} setUser={setUser} />} />}\n        {!isLogin && <Tab.Screen name=\"Register\" children={() => !isLoading && <Register setIsLogin={setIsLogin} setUser={setUser} />} />}\n        {isLogin && <Tab.Screen name=\"Overview\" children={() => <OverviewNavigator user={user} />} />}\n        {isLogin && <Tab.Screen name=\"Map\" children={() => <MapNavigator user={user} />} />}\n        {isLogin && <Tab.Screen name=\"Settings\" component={OverviewNavigator} user={user} />}\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}