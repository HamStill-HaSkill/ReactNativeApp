{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { useFonts, Inter_300Light } from '@expo-google-fonts/inter';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { setCustomText } from 'react-native-global-props';\nimport { firebase } from \"./src/firebase/config\";\nimport Login from \"./src/Login/Login\";\nimport Register from \"./src/Register/Register\";\nimport NavTab from \"./src/NavTab/NavTab\";\nimport i18n from \"./src/i18n\";\nimport MapNavigator from \"./src/Map/MapNavigator\";\nimport OverviewNavigator from \"./src/OverviewNavigator\";\nimport SettingsNavigator from \"./src/Settings/SettingsNavigator\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogin = _useState2[0],\n      setIsLogin = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lng = _useState8[0],\n      setLng = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      font = _useState10[0],\n      setFont = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isDark = _useState12[0],\n      setIsDark = _useState12[1];\n\n  var _useFonts = useFonts({\n    Inter_300Light: Inter_300Light\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var defaultTextProps = {\n    style: {\n      fontFamily: 'Inter_300Light',\n      fontSize: 17\n    }\n  };\n  useEffect(function () {\n    i18n.locale = lng;\n    setLng(lng);\n  }, [lng]);\n  useEffect(function () {\n    setCustomText(defaultTextProps);\n  }, [fontsLoaded]);\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setUser(userData);\n          setLoading(false);\n          setIsLogin(true);\n        }).catch(function (error) {\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  var signOut = function signOut() {\n    firebase.auth().signOut();\n    setIsLogin(false);\n  };\n\n  return React.createElement(NavigationContainer, {\n    theme: isDark ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: NavTab,\n    tabBarOptions: {\n      activeTintColor: '#333333',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, !isLogin && React.createElement(Tab.Screen, {\n    name: \"Login\",\n    options: {\n      title: i18n.t('log')\n    },\n    children: function children() {\n      return !isLoading && React.createElement(Login, {\n        setIsLogin: setIsLogin,\n        setUser: setUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }\n  }), !isLogin && React.createElement(Tab.Screen, {\n    name: \"Register\",\n    options: {\n      title: i18n.t('reg')\n    },\n    children: function children() {\n      return !isLoading && React.createElement(Register, {\n        setIsLogin: setIsLogin,\n        setUser: setUser,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Overview\",\n    options: {\n      title: i18n.t('parks')\n    },\n    children: function children() {\n      return React.createElement(OverviewNavigator, {\n        user: user,\n        signOut: signOut,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Map\",\n    options: {\n      title: i18n.t('map')\n    },\n    children: function children() {\n      return React.createElement(MapNavigator, {\n        user: user,\n        signOut: signOut,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), isLogin && React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    options: {\n      title: i18n.t('settings')\n    },\n    children: function children() {\n      return React.createElement(SettingsNavigator, {\n        user: user,\n        setLng: setLng,\n        lng: lng,\n        signOut: signOut,\n        setIsDark: setIsDark,\n        setFont: setFont,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/App.js"],"names":["React","useState","useEffect","NavigationContainer","DefaultTheme","DarkTheme","useFonts","Inter_300Light","createBottomTabNavigator","createStackNavigator","setCustomText","firebase","Login","Register","NavTab","i18n","MapNavigator","OverviewNavigator","SettingsNavigator","Tab","Stack","App","isLogin","setIsLogin","isLoading","setLoading","user","setUser","lng","setLng","font","setFont","isDark","setIsDark","fontsLoaded","defaultTextProps","style","fontFamily","fontSize","locale","usersRef","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","signOut","activeTintColor","inactiveTintColor","title","t","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { useFonts, Inter_300Light } from '@expo-google-fonts/inter';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { setCustomText } from 'react-native-global-props';\nimport { firebase } from './src/firebase/config';\nimport Login from './src/Login/Login';\nimport Register from './src/Register/Register';\nimport NavTab from './src/NavTab/NavTab';\nimport i18n from './src/i18n'\n\nimport MapNavigator from './src/Map/MapNavigator';\nimport OverviewNavigator from './src/OverviewNavigator';\nimport SettingsNavigator from './src/Settings/SettingsNavigator';\n\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\n  let [isLogin, setIsLogin] = useState(false);\n  let [isLoading, setLoading] = useState(true);\n  let [user, setUser] = useState();\n\n  let [lng, setLng] = useState('');\n  let [font, setFont] = useState();\n  let [isDark, setIsDark] = useState(false);\n\n  let [fontsLoaded] = useFonts({\n    Inter_300Light,\n  });\n\n  const defaultTextProps = {\n    style: {\n      fontFamily: 'Inter_300Light',\n      fontSize: 17,\n    }\n  }\n\n  useEffect(() => {\n    i18n.locale = lng;\n    setLng(lng);\n  }, [lng]);\n\n  useEffect(() => {\n    setCustomText(defaultTextProps);\n  }, [fontsLoaded])\n  \n  useEffect(() => {\n    const usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser(userData)\n            setLoading(false)\n            setIsLogin(true)\n          })\n          .catch((error) => {\n            setLoading(false)\n          });\n      } else {\n        setLoading(false)\n      }\n    });\n  }, []);\n\n  let signOut = () => {\n    firebase.auth().signOut();\n    setIsLogin(false);\n  }\n\n  return (\n    <NavigationContainer theme={isDark ? DarkTheme : DefaultTheme}>\n      {/* Icons for navigation tabs */}\n      <Tab.Navigator screenOptions={NavTab} tabBarOptions={{\n        activeTintColor: '#333333',\n        inactiveTintColor: 'gray',\n      }}>\n        {/* navigation tabs (bottom app)*/}\n        {!isLogin && <Tab.Screen name=\"Login\" options={{ title: i18n.t('log') }}\n          children={() => !isLoading && <Login setIsLogin={setIsLogin} setUser={setUser} />} />}\n        {!isLogin && <Tab.Screen name=\"Register\" options={{ title: i18n.t('reg') }}\n          children={() => !isLoading && <Register setIsLogin={setIsLogin} setUser={setUser} />} />}\n        {isLogin && <Tab.Screen name=\"Overview\" options={{ title: i18n.t('parks') }}\n          children={() => <OverviewNavigator user={user} signOut={signOut} />} />}\n        {isLogin && <Tab.Screen name=\"Map\" options={{ title: i18n.t('map') }}\n          children={() => <MapNavigator user={user} signOut={signOut} />} />}\n        {isLogin && <Tab.Screen name=\"Settings\" options={{ title: i18n.t('settings') }}\n          children={() => <SettingsNavigator user={user} setLng={setLng} lng={lng} signOut={signOut}\n            setIsDark={setIsDark} setFont={setFont} />} />}\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}