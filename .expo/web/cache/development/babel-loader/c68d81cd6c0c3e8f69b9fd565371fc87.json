{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Progi\\\\amupark\\\\amupark\\\\src\\\\Overview.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { firebase } from \"./firebase/config\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Detail from \"./Detail/Detail\";\nimport { useNavigation } from '@react-navigation/native';\n\nvar Overview = function Overview(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      parksData = _useState2[0],\n      setParksData = _useState2[1];\n\n  var navigation = useNavigation();\n  var entityRef = firebase.firestore().collection('parks');\n  var userID = props.user.id;\n  useEffect(function () {\n    entityRef.where(\"userID\", \"==\", userID).onSnapshot(function (query) {\n      var parks = [];\n      query.forEach(function (park) {\n        parks.push({\n          id: park.id,\n          src: park.data().imgURL\n        });\n      });\n      setParksData(parks);\n      console.log(parks);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var addPark = function addPark() {\n    var data = {\n      name: \"park\",\n      imgURL: \"https://cf.bstatic.com/data/xphoto/1182x887/324/32450911.jpg?size=S\",\n      userID: userID\n    };\n    entityRef.add(data).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: parksData,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          margin: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.push('Detail');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.imageThumbnail,\n        source: {\n          uri: item.src\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      })));\n    },\n    numColumns: 3,\n    keyExtractor: function keyExtractor(item, index) {\n      return index;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Overview;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  imageThumbnail: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100\n  }\n});","map":{"version":3,"sources":["D:/Progi/amupark/amupark/src/Overview.js"],"names":["React","useState","useEffect","firebase","Detail","useNavigation","Overview","props","parksData","setParksData","navigation","entityRef","firestore","collection","userID","user","id","where","onSnapshot","query","parks","forEach","park","push","src","data","imgURL","console","log","error","addPark","name","add","catch","alert","styles","container","item","flex","flexDirection","margin","imageThumbnail","uri","index","StyleSheet","create","justifyContent","backgroundColor","alignItems","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firebase } from './firebase/config';\r\nimport { SafeAreaView, StyleSheet, View, FlatList, Image, Button, TouchableHighlight } from 'react-native';\r\nimport Detail from './Detail/Detail'\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst Overview = (props) => {\r\n  const [parksData, setParksData] = useState([]);\r\n\r\n  const navigation = useNavigation();\r\n  const entityRef = firebase.firestore().collection('parks')\r\n  const userID = props.user.id\r\n\r\n  useEffect(() => {\r\n      entityRef.where(\"userID\", \"==\", userID).onSnapshot(query => {\r\n                let parks = []\r\n                query.forEach(park => {\r\n                    parks.push({id: park.id, src: park.data().imgURL })\r\n                });\r\n                setParksData(parks);\r\n                console.log(parks);\r\n            },\r\n            error => {\r\n                console.log(error)\r\n            }\r\n        )\r\n  }, [])\r\n\r\n  let addPark = () => {\r\n    let data = {\r\n      name: \"park\",\r\n      imgURL: \"https://cf.bstatic.com/data/xphoto/1182x887/324/32450911.jpg?size=S\",\r\n      userID,\r\n    }\r\n    entityRef.add(data).catch((error) => {\r\n        alert(error)\r\n    });\r\n\r\n  }\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        data={parksData}\r\n        renderItem={({ item }) => (\r\n          <View style={{ flex: 1, flexDirection: 'column', margin: 1 }}>\r\n            <TouchableHighlight onPress={() => navigation.push('Detail')}>\r\n              <Image style={styles.imageThumbnail} source={{ uri: item.src }}/>\r\n            </TouchableHighlight>\r\n            {/* <Button onPress={addPark} title=\"Add\" /> */}\r\n          </View>\r\n        )}\r\n        //Setting the number of column\r\n        numColumns={3}\r\n        keyExtractor={(item, index) => index}\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n};\r\nexport default Overview;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  imageThumbnail: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: 100,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}